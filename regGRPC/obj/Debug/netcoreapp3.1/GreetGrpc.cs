// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/greet.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace regGRPC {
  /// <summary>
  /// The greeting service definition.
  /// </summary>
  public static partial class Greeter
  {
    static readonly string __ServiceName = "greet.Greeter";

    static readonly grpc::Marshaller<global::regGRPC.RegistrationProcessRequest> __Marshaller_greet_RegistrationProcessRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::regGRPC.RegistrationProcessRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::regGRPC.DefaultResponse> __Marshaller_greet_DefaultResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::regGRPC.DefaultResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::regGRPC.ValidateEnvironmentTypeRequest> __Marshaller_greet_ValidateEnvironmentTypeRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::regGRPC.ValidateEnvironmentTypeRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::regGRPC.ValidateLevelTypeRequest> __Marshaller_greet_ValidateLevelTypeRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::regGRPC.ValidateLevelTypeRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::regGRPC.GetAllRegistrationProcessRequest> __Marshaller_greet_GetAllRegistrationProcessRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::regGRPC.GetAllRegistrationProcessRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::regGRPC.GetAllRegistrationProcessResponse> __Marshaller_greet_GetAllRegistrationProcessResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::regGRPC.GetAllRegistrationProcessResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::regGRPC.GetByIdRegistrationProcessRequest> __Marshaller_greet_GetByIdRegistrationProcessRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::regGRPC.GetByIdRegistrationProcessRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::regGRPC.GetByIdRegistrationProcessResponse> __Marshaller_greet_GetByIdRegistrationProcessResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::regGRPC.GetByIdRegistrationProcessResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::regGRPC.ValidateRegistrationProcessIdRequest> __Marshaller_greet_ValidateRegistrationProcessIdRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::regGRPC.ValidateRegistrationProcessIdRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::regGRPC.ArchiveRequest> __Marshaller_greet_ArchiveRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::regGRPC.ArchiveRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::regGRPC.DeleteRequest> __Marshaller_greet_DeleteRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::regGRPC.DeleteRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::regGRPC.FilterRegistrationProcessRequest> __Marshaller_greet_FilterRegistrationProcessRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::regGRPC.FilterRegistrationProcessRequest.Parser.ParseFrom);

    static readonly grpc::Method<global::regGRPC.RegistrationProcessRequest, global::regGRPC.DefaultResponse> __Method_SendRegistrationProcess = new grpc::Method<global::regGRPC.RegistrationProcessRequest, global::regGRPC.DefaultResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SendRegistrationProcess",
        __Marshaller_greet_RegistrationProcessRequest,
        __Marshaller_greet_DefaultResponse);

    static readonly grpc::Method<global::regGRPC.ValidateEnvironmentTypeRequest, global::regGRPC.DefaultResponse> __Method_SendValidateEnvironmentTypeRequest = new grpc::Method<global::regGRPC.ValidateEnvironmentTypeRequest, global::regGRPC.DefaultResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SendValidateEnvironmentTypeRequest",
        __Marshaller_greet_ValidateEnvironmentTypeRequest,
        __Marshaller_greet_DefaultResponse);

    static readonly grpc::Method<global::regGRPC.ValidateLevelTypeRequest, global::regGRPC.DefaultResponse> __Method_SendValidateLevelTypeRequest = new grpc::Method<global::regGRPC.ValidateLevelTypeRequest, global::regGRPC.DefaultResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SendValidateLevelTypeRequest",
        __Marshaller_greet_ValidateLevelTypeRequest,
        __Marshaller_greet_DefaultResponse);

    static readonly grpc::Method<global::regGRPC.GetAllRegistrationProcessRequest, global::regGRPC.GetAllRegistrationProcessResponse> __Method_SendGetAllRegistrationProcess = new grpc::Method<global::regGRPC.GetAllRegistrationProcessRequest, global::regGRPC.GetAllRegistrationProcessResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SendGetAllRegistrationProcess",
        __Marshaller_greet_GetAllRegistrationProcessRequest,
        __Marshaller_greet_GetAllRegistrationProcessResponse);

    static readonly grpc::Method<global::regGRPC.GetByIdRegistrationProcessRequest, global::regGRPC.GetByIdRegistrationProcessResponse> __Method_GetByIdRegistrationProcess = new grpc::Method<global::regGRPC.GetByIdRegistrationProcessRequest, global::regGRPC.GetByIdRegistrationProcessResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetByIdRegistrationProcess",
        __Marshaller_greet_GetByIdRegistrationProcessRequest,
        __Marshaller_greet_GetByIdRegistrationProcessResponse);

    static readonly grpc::Method<global::regGRPC.ValidateRegistrationProcessIdRequest, global::regGRPC.DefaultResponse> __Method_ValidateRegistrationProcessId = new grpc::Method<global::regGRPC.ValidateRegistrationProcessIdRequest, global::regGRPC.DefaultResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ValidateRegistrationProcessId",
        __Marshaller_greet_ValidateRegistrationProcessIdRequest,
        __Marshaller_greet_DefaultResponse);

    static readonly grpc::Method<global::regGRPC.ArchiveRequest, global::regGRPC.DefaultResponse> __Method_Archive = new grpc::Method<global::regGRPC.ArchiveRequest, global::regGRPC.DefaultResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Archive",
        __Marshaller_greet_ArchiveRequest,
        __Marshaller_greet_DefaultResponse);

    static readonly grpc::Method<global::regGRPC.DeleteRequest, global::regGRPC.DefaultResponse> __Method_Delete = new grpc::Method<global::regGRPC.DeleteRequest, global::regGRPC.DefaultResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Delete",
        __Marshaller_greet_DeleteRequest,
        __Marshaller_greet_DefaultResponse);

    static readonly grpc::Method<global::regGRPC.FilterRegistrationProcessRequest, global::regGRPC.GetAllRegistrationProcessResponse> __Method_FilterRegistrationProcess = new grpc::Method<global::regGRPC.FilterRegistrationProcessRequest, global::regGRPC.GetAllRegistrationProcessResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "FilterRegistrationProcess",
        __Marshaller_greet_FilterRegistrationProcessRequest,
        __Marshaller_greet_GetAllRegistrationProcessResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::regGRPC.GreetReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Greeter</summary>
    [grpc::BindServiceMethod(typeof(Greeter), "BindService")]
    public abstract partial class GreeterBase
    {
      /// <summary>
      /// Sends a greeting
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::regGRPC.DefaultResponse> SendRegistrationProcess(global::regGRPC.RegistrationProcessRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::regGRPC.DefaultResponse> SendValidateEnvironmentTypeRequest(global::regGRPC.ValidateEnvironmentTypeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::regGRPC.DefaultResponse> SendValidateLevelTypeRequest(global::regGRPC.ValidateLevelTypeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::regGRPC.GetAllRegistrationProcessResponse> SendGetAllRegistrationProcess(global::regGRPC.GetAllRegistrationProcessRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::regGRPC.GetByIdRegistrationProcessResponse> GetByIdRegistrationProcess(global::regGRPC.GetByIdRegistrationProcessRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::regGRPC.DefaultResponse> ValidateRegistrationProcessId(global::regGRPC.ValidateRegistrationProcessIdRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::regGRPC.DefaultResponse> Archive(global::regGRPC.ArchiveRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::regGRPC.DefaultResponse> Delete(global::regGRPC.DeleteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::regGRPC.GetAllRegistrationProcessResponse> FilterRegistrationProcess(global::regGRPC.FilterRegistrationProcessRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(GreeterBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_SendRegistrationProcess, serviceImpl.SendRegistrationProcess)
          .AddMethod(__Method_SendValidateEnvironmentTypeRequest, serviceImpl.SendValidateEnvironmentTypeRequest)
          .AddMethod(__Method_SendValidateLevelTypeRequest, serviceImpl.SendValidateLevelTypeRequest)
          .AddMethod(__Method_SendGetAllRegistrationProcess, serviceImpl.SendGetAllRegistrationProcess)
          .AddMethod(__Method_GetByIdRegistrationProcess, serviceImpl.GetByIdRegistrationProcess)
          .AddMethod(__Method_ValidateRegistrationProcessId, serviceImpl.ValidateRegistrationProcessId)
          .AddMethod(__Method_Archive, serviceImpl.Archive)
          .AddMethod(__Method_Delete, serviceImpl.Delete)
          .AddMethod(__Method_FilterRegistrationProcess, serviceImpl.FilterRegistrationProcess).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, GreeterBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_SendRegistrationProcess, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::regGRPC.RegistrationProcessRequest, global::regGRPC.DefaultResponse>(serviceImpl.SendRegistrationProcess));
      serviceBinder.AddMethod(__Method_SendValidateEnvironmentTypeRequest, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::regGRPC.ValidateEnvironmentTypeRequest, global::regGRPC.DefaultResponse>(serviceImpl.SendValidateEnvironmentTypeRequest));
      serviceBinder.AddMethod(__Method_SendValidateLevelTypeRequest, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::regGRPC.ValidateLevelTypeRequest, global::regGRPC.DefaultResponse>(serviceImpl.SendValidateLevelTypeRequest));
      serviceBinder.AddMethod(__Method_SendGetAllRegistrationProcess, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::regGRPC.GetAllRegistrationProcessRequest, global::regGRPC.GetAllRegistrationProcessResponse>(serviceImpl.SendGetAllRegistrationProcess));
      serviceBinder.AddMethod(__Method_GetByIdRegistrationProcess, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::regGRPC.GetByIdRegistrationProcessRequest, global::regGRPC.GetByIdRegistrationProcessResponse>(serviceImpl.GetByIdRegistrationProcess));
      serviceBinder.AddMethod(__Method_ValidateRegistrationProcessId, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::regGRPC.ValidateRegistrationProcessIdRequest, global::regGRPC.DefaultResponse>(serviceImpl.ValidateRegistrationProcessId));
      serviceBinder.AddMethod(__Method_Archive, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::regGRPC.ArchiveRequest, global::regGRPC.DefaultResponse>(serviceImpl.Archive));
      serviceBinder.AddMethod(__Method_Delete, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::regGRPC.DeleteRequest, global::regGRPC.DefaultResponse>(serviceImpl.Delete));
      serviceBinder.AddMethod(__Method_FilterRegistrationProcess, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::regGRPC.FilterRegistrationProcessRequest, global::regGRPC.GetAllRegistrationProcessResponse>(serviceImpl.FilterRegistrationProcess));
    }

  }
}
#endregion
